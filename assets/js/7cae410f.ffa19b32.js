"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[840],{4137:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>b});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,b=u["".concat(s,".").concat(d)]||u[d]||c[d]||r;return t?a.createElement(b,i(i({ref:n},m),{},{components:t})):a.createElement(b,i({ref:n},m))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1787:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(7462),o=(t(7294),t(4137));const r={id:"adopt",sidebar_position:1,title:"Adopt"},i=void 0,l={unversionedId:"Transition/adopt",id:"Transition/adopt",title:"Adopt",description:"Ansible installation (Installation guide)",source:"@site/docs/4-Transition/1-Adopt.md",sourceDirName:"4-Transition",slug:"/Transition/adopt",permalink:"/mq-ansible-fork/Transition/adopt",draft:!1,editUrl:"https://github.com/ibm-client-engineering/mq-ansible-fork.git/docs/4-Transition/1-Adopt.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"adopt",sidebar_position:1,title:"Adopt"},sidebar:"tutorialSidebar",previous:{title:"Transition",permalink:"/mq-ansible-fork/category/transition"},next:{title:"Knowledge Transfer",permalink:"/mq-ansible-fork/Transition/knowledge_transfer"}},s={},p=[{value:"<em>Ansible</em> installation (Installation guide)",id:"ansible-installation-installation-guide",level:5},{value:"Playbooks and Roles for IBM MQ installation",id:"playbooks-and-roles-for-ibm-mq-installation",level:2},{value:"Example Playbooks",id:"example-playbooks",level:3},{value:"<em>Note</em>: The MQ <em>version</em> and app user&#39;s <em>UID and GID</em> can be specified here.",id:"note-the-mq-version-and-app-users-uid-and-gid-can-be-specified-here",level:5}],m={toc:p},u="wrapper";function c(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h5",{id:"ansible-installation-installation-guide"},(0,o.kt)("em",{parentName:"h5"},"Ansible")," installation (",(0,o.kt)("a",{parentName:"h5",href:"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html"},"Installation guide"),")"),(0,o.kt)("h2",{id:"playbooks-and-roles-for-ibm-mq-installation"},"Playbooks and Roles for IBM MQ installation"),(0,o.kt)("p",null,"The playbooks and roles in this collection carryout an installation of IBM MQ Advanced on an Ubuntu target machine. The roles have been implemented to set up the required users on the machine, download the software, install and configure IBM MQ, copy over a configurable ",(0,o.kt)("inlineCode",{parentName:"p"},"dev-config.mqsc")," file ready to be run on the target machine, and setup and start the web console. Developers can change this file to customise the configuration of their queue managers. Here we use a playbook that calls other playbooks but you can run the roles in playbooks to suit your requirements."),(0,o.kt)("h3",{id:"example-playbooks"},"Example Playbooks"),(0,o.kt)("p",null,"ibmmq.yml - this playbook calls the mq-install and mq-setup playbooks, host names are passed into the imported playbook variable as {{ ansible_play_batch }}"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Install and setup IBM MQ\n  hosts: ['servers']\n\n- name: Run the install playbook\n  import_playbook: mq-install.yml\n\n- name: Run the setup playbook\n  import_playbook: mq-setup.yml\n")),(0,o.kt)("p",null,"mq-install.yml - this playbook installs IBM MQ with the SSH user specified in the inventory"),(0,o.kt)("h5",{id:"note-the-mq-version-and-app-users-uid-and-gid-can-be-specified-here"},(0,o.kt)("em",{parentName:"h5"},"Note"),": The MQ ",(0,o.kt)("em",{parentName:"h5"},"version")," and app user's ",(0,o.kt)("em",{parentName:"h5"},"UID and GID")," can be specified here."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'- hosts: "{{ ansible_play_batch }}"\n  serial: 1\n  become: false\n  environment:\n    PATH: /opt/mqm/bin:{{ ansible_env.PATH }}\n\n  roles:\n    - role: setupusers\n      vars:\n        appUid: 909\n        appGid: 909\n        mqmHome: /home/mqm\n        mqmProfile: .profile\n    - role: downloadmq\n      vars:\n        version: 930\n')),(0,o.kt)("p",null,"mq-setup.yml - this playbook sets up IBM MQ using the 'mqm' user"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- hosts: \"{{ ansible_play_hosts }}\"\n  serial: 1\n  become: yes\n  become_user: mqm\n  environment:\n    PATH: /opt/mqm/bin:{{ ansible_env.PATH }}\n\n  roles:\n    - getconfig\n    - setupconsole\n    - startconsole\n\n  tasks:\n\n    - name: Create a queue manager\n      queue_manager:\n        qmname:\n        - 'QM1'\n        - 'QM2'\n        state: 'present'\n")))}c.isMDXComponent=!0}}]);